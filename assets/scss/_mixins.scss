//IMPORT FONTS

@mixin font-face($family, $path, $weight: normal, $style: normal) {
  /* raleway-regular - latin */
  @font-face {
    font-family: $family;
    font-display: swap;
    font-style: $style;
    font-weight: 400;
    src: url($path+'.eot'); /* IE9 Compat Modes */
    src: local(''),
         url($path +'.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */
         url($path +'.woff2') format('woff2'), /* Super Modern Browsers */
         url($path +'.woff') format('woff'), /* Modern Browsers */
         url($path +'.ttf') format('truetype'), /* Safari, Android, iOS */
         url($path +'.svg#Raleway') format('svg'); /* Legacy iOS */
  }
}

//USE FONT

@mixin font($family: "", $size: false, $weight: "medium", $lh: false) {
  font-family: $family, Helvetica, Arial, sans-serif;
  src: url("/font/" + $family + "-" + $weight + ".ttf");
  @if $size {
    font-size: $size;
  }
  @if $weight {
    font-weight: $weight;
  }
  @if $lh {
    line-height: $lh;
  }
}


@mixin closeIcon($top: 10px, $right: 10px) {
  line-height: 50px;
  font-size: 80%;
  position: absolute;
  right: $right;
  text-align: center;
  top: $top;
  text-decoration: none;
  &:hover {
    @include dropShadow("sm")
  }
  img {
    width:28px;
  }
}


@mixin form($color: black) {
    @include flexbox;
    @include justify-content(center);
    @include flex-direction(column);

    label {
      color: $color;
      padding-left: 10px;
      padding-bottom: 5px;
    }

    input:-internal-autofill-selected {
      background-color: #303030;
    }

    textarea {
      @include input;
      padding: 10px 10px  !important;
    }

    input {
      height: 30px;
      @include input($color);

      &[type="submit"] {
        // margin-top: 18px;
        width: auto;
        height: auto;
        cursor: pointer;
        @include align-self(center);
        padding: 4px 12px;
        font-size: 20px;

      }
    }

  }

  @mixin input($color: black) {
    margin-bottom: 10px;
    background-color: transparent;
    border: none;
    border-radius: 20px;
    color: $color;
    transition: all 0.3s;
    padding: 1px 10px;
    font-size: 18px;
  
    &:focus {
      outline: none;
  
    }
  }


@mixin position($pos: relative, $top: 0, $left: 0) {
  position: $pos;
  top: $top;
  left: $left
}

@mixin arrow($direction: down, $size: 5px, $color: #555) {
  width: 0;
  height: 0;
  @if ($direction == left) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  } @else if ($direction == right) {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  } @else if ($direction == down) {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
  } @else {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
  }
}

$breakpoints: (
  "phone": 400px,
  "phone-wide": 480px,
  "phablet": 560px,
  "tablet-small": 640px,
  "tablet": 768px,
  "tablet-wide": 1024px,
  "desktop": 1248px,
  "desktop-wide": 1440px,
);
@mixin mq($width, $type: max) {
  @if map_has_key($breakpoints, $width) {
    $width: map_get($breakpoints, $width);
    @if $type == max {
      $width: $width - 1px;
    }
    @media only screen and (#{$type}-width: $width) {
      @content;
    }
  }
}

$prefixes: "webkit", "moz", "ms", "o", "none";
@mixin prefix($property, $arguments) {
  @each $prefix in $prefixes {
    @if $prefix == "none" {
      #{$property}: $arguments;
    } @else {
      -#{$prefix}-#{$property}: $arguments;
    }
  }
}

@mixin dropShadow($size) {
  @if $size == "sm" {
    @include prefix(filter, drop-shadow(-1px 1px 2px rgba(0, 0, 0, 0.3)));
  }
  @if $size == "lg" {
    @include prefix(filter, drop-shadow(-3px 3px 3px rgba(0, 0, 0, 0.3)));
  }
  @if $size == "none"{
    @include prefix(filter, drop-shadow(0px 0px 0px rgba(0, 0, 0, 0)));
  }
}

@mixin background($url, $x: 0%, $y: 50%) {
  background: {
    image: url($url);
    repeat: no-repeat;
    position: $x $y;
  }

  @include prefix("background-size", contain);
}

@mixin underline {
  background-image: linear-gradient(transparent calc(95% - 1px), #fff 5px);
  background-size: 0;
  background-repeat: no-repeat;
  display: inline;
  transition: 0.2s ease;

  &:hover {
    background-size: 100%;
  }
}

@mixin overlay($parent) {
  #{$parent} {
    @include position;

    .top {
     
        width: 100%;
        @include position;
        @include prefix('transition', opacity 0.3s ease);
    }

    & .under {
      @include position(absolute);
      width: 100%;

  }
}
}

@mixin crossfade($parent) {

  @include overlay($parent);
  #{$parent} {

    & .invert {
      @include position(absolute);
        width: 100%;
       
        @include prefix("opacity", 0);

    }
    &:hover {
        & .invert {
            @include prefix("opacity", 1);  
        }
        .top {
            @include prefix("opacity", 0);
        }
    }
  }
}

@mixin gutter($direction: "h", $size: 10px) {
  @if $direction == "v" {
    margin: $size 0;
  }
  @if $direction == "h" {
    margin: 0 $size;
  }
  @if $direction == "a" {
    margin: $size;
  }
}

@mixin scrollbars($size, $foreground-color, $background-color: mix($foreground-color, white,  50%)) {
  // For Google Chrome
  &::-webkit-scrollbar {
    width:  $size;
    height: $size;
  }

  &::-webkit-scrollbar-thumb {
    background: $foreground-color;
  }

  &::-webkit-scrollbar-track {
    background: $background-color;
  }

  // For Internet Explorer
  & {
    scrollbar-face-color: $foreground-color;
    scrollbar-track-color: $background-color;
  }
}

$color: #e8eff3;

@mixin neustyle( 
		$color, 
		$hover: false, 
		$direction: topleft, 
		$inset: false, 
		$distance: 2px 
	) {
  transition: box-shadow .3s ease, color .3s ease;
	$v: 2px;
	
	@if $distance {
		$v: $distance;		
	}

	$topX: ($v*2*-1);
	$topY: ($v*2*-1);
		
	@if $direction == 'topcenter' {
		$topX: 0px;
		$topY: ($v*2*-1);
	}
	@if $direction == 'topright' {
		$topX: ($v*2);
		$topY: ($v*2*-1);
	}
		
	$out: $topX $topY ($v*3) rgba(#fff,.7),
		  $topX*-1 $topY*-1 ($v*3) darken($color,12),
		  inset $topX $topY ($v*6) rgba(#fff,.1),
		  inset $topX*-1 $topY*-1 ($v*6) darken($color,0);

	$in: $topX $topY ($v*5) rgba(#fff,.2),
		 $topX*-1 $topY*-1 ($v*3) darken($color,0),
		 inset $topX $topY ($v*6) rgba(#fff,.6),
	     inset $topX/2 $topY/2 ($v) rgba(#fff,.2),
		 inset $topX*-1 $topY*-1 ($v*3) darken($color,10);
		
	@if $inset {
		box-shadow: $in;
	}
	@else {
		box-shadow: $out;
	}
		
	@if $hover {
		&:hover {
			@if $inset {
				box-shadow: $out;
			}
			@else {
				box-shadow: $in;
			}
		}
	}
}

